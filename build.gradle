buildscript {
    ext {
        joobyVersion = "3.5.5"
        jupiterVersion = "5.11.4"
        okHttpVersion = "4.12.0"
    }
}

plugins {
    id "application"
    id "io.jooby.openAPI" version "${joobyVersion}"
    id "io.jooby.run" version "${joobyVersion}"
    id "io.spring.dependency-management" version "1.1.7"
    id "com.google.osdetector" version "1.7.3"
    id "com.github.johnrengelman.shadow" version "8.1.1"
    id "com.github.ben-manes.versions" version "0.51.0"
    id "jacoco"
}

group "app"
version "1.0.0"
mainClassName = "com.github.Program"
sourceCompatibility = 17

repositories {
    mavenLocal()
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom "io.jooby:jooby-bom:$joobyVersion"
    }
}

dependencies {
    annotationProcessor "io.jooby:jooby-apt"

    implementation "io.jooby:jooby-netty:$joobyVersion"
    implementation "io.jooby:jooby-guice:$joobyVersion"
    implementation "io.jooby:jooby-jackson:$joobyVersion"
    implementation "io.jooby:jooby-rxjava3:$joobyVersion"

    implementation "io.jooby:jooby-netty"
    implementation "ch.qos.logback:logback-classic:1.5.15"
    implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"
    implementation "com.squareup.okio:okio:3.9.1"

    testImplementation "org.junit.jupiter:junit-jupiter-api:$jupiterVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:$jupiterVersion"
    testImplementation "io.jooby:jooby-test"
    testImplementation "com.squareup.okhttp3:okhttp:$okHttpVersion"
    testImplementation "org.mockito:mockito-core:5.14.2"

}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport // report is always generated after tests run
}

/** Java debug information: */
tasks.withType(JavaCompile).configureEach {
    options.compilerArgs += [
            '-parameters',
            '-Ajooby.incremental=true',
            '-Ajooby.services=true',
            '-Ajooby.debug=false'
    ]
    options.debug = true
}

shadowJar {
    mergeServiceFiles()
}

joobyRun.dependsOn openAPI
jar.dependsOn openAPI

jacoco {
    toolVersion = "0.8.12"
}

jacocoTestReport {
    // ./gradlew test jacocoTestReport from CLI
    dependsOn test
    group = "Reporting"
    reports {
        xml.required.set(true)
        csv.required.set(true)
        html.required.set(true)
        html.outputLocation.set(layout.buildDirectory.dir("reports/coverage"))
    }
}
